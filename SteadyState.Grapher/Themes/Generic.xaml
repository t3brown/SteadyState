<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SteadyState.Grapher"
    xmlns:elements="clr-namespace:SteadyState.Grapher.Elements"
    xmlns:controls="clr-namespace:SteadyState.Grapher.Controls"
    xmlns:sw="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:helpers="clr-namespace:SteadyState.Grapher.Helpers">

	<DrawingBrush x:Key="HatchGroundBrush"
				  TileMode="Tile"
				  ViewportUnits="Absolute"
				  Viewport="0.5,0,5,6">
		<DrawingBrush.Drawing>
			<DrawingGroup>
				<GeometryDrawing Brush="YellowGreen">
					<GeometryDrawing.Geometry>
						<RectangleGeometry Rect="-60,-60,120,120" />
					</GeometryDrawing.Geometry>
				</GeometryDrawing>
				<GeometryDrawing Brush="Yellow"
				                 Geometry="M60,-60 L0,60 L-60,60 L0,-60Z"/>
			</DrawingGroup>
		</DrawingBrush.Drawing>
	</DrawingBrush>

	<DrawingBrush x:Key="GridBasicBrush"
	              Viewport="0.25,0.85,2,2" 
	              ViewportUnits="Absolute"
	              TileMode="Tile">
		<DrawingBrush.Drawing>
			<DrawingGroup>
				<GeometryDrawing Brush="White">
					<GeometryDrawing.Geometry>
						<RectangleGeometry Rect="0,0,1.5,1.5" />
					</GeometryDrawing.Geometry>
				</GeometryDrawing>
				<GeometryDrawing Geometry="M0,0 L1,1 1.1,1, 0.1,0Z" Brush="Black" />
				<GeometryDrawing Geometry="M0,1 L1,0 1.1,0, 0.1,1Z" Brush="Black" />
			</DrawingGroup>
		</DrawingBrush.Drawing>
	</DrawingBrush>


	<Style TargetType="{x:Type elements:Vertex}">
		<Setter Property="UseLayoutRounding" Value="False"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<RotateTransform Angle="{Binding Angle, RelativeSource={RelativeSource AncestorType=elements:Vertex}}"
                                 CenterY="5"
                                 CenterX="5"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type elements:Vertex}">

					<Grid>


						<Rectangle x:Name="InnerRectangle"
						           Stroke="{x:Static Brushes.Black}"
						           StrokeThickness="1"
						           Fill="{x:Static Brushes.Transparent}"
						           Height="6"
						           Margin="-0.5,1.5"
						           Visibility="Collapsed"/>

						<Ellipse x:Name="InnerEllipse"
						         Visibility="Collapsed"
						         Stroke="{x:Static Brushes.Black}"
						         StrokeThickness="1"
						         Fill="{x:Static Brushes.Transparent}"
						         Margin="1"
						         Height="7"
						         Width="7"/>

						<Rectangle x:Name="Rectangle"
								   
						           Stroke="{Binding RelativeSource={RelativeSource AncestorType=elements:Vertex}, Path=Stroke}"
						           StrokeThickness="{TemplateBinding StrokeThickness}"
						           Fill="{TemplateBinding Fill}"
						           Height="5"
						           Margin="0,2.5"/>

						<Ellipse x:Name="Ellipse"
						         Visibility="Collapsed"
                                 Stroke="{Binding RelativeSource={RelativeSource AncestorType=elements:Vertex}, Path=Stroke}"
                                 StrokeThickness="{TemplateBinding StrokeThickness}"
                                 Fill="{TemplateBinding Fill}"
                                 Margin="2"
                                 Height="6"/>



					
					</Grid>

					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="ActualWidth" Value="10"/>
								<Condition Property="ActualHeight" Value="10"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Rectangle" Property="Visibility" Value="Collapsed"/>
							<Setter TargetName="Ellipse" Property="Visibility" Value="Visible"/>
						</MultiTrigger>
						<Trigger Property="elements:Vertex.IsPreview" Value="True">
							<Setter TargetName="Rectangle" Property="StrokeDashArray" Value="5 2"/>
							<Setter TargetName="Ellipse" Property="StrokeDashArray" Value="5 2"/>
						</Trigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition SourceName="Ellipse" Property="Visibility" Value="Visible"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="InnerEllipse" Property="Visibility" Value="Visible"/>
						</MultiTrigger>


						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition SourceName="Rectangle" Property="Visibility" Value="Visible"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="InnerRectangle" Property="Visibility" Value="Visible"/>
							<Setter Property="Panel.ZIndex" Value="1"/>
						</MultiTrigger>

						<!--<Trigger Property="elements:Vertex.IsSelected" Value="True">
							<Setter TargetName="InnerRectangle" Property="Visibility" Value="Visible"/>
						</Trigger>-->
						<Trigger Property="elements:Vertex.IsConnected" Value="True">
							<Setter Property="Stroke" Value="{x:Static Brushes.Blue}"/>
						</Trigger>
						<Trigger Property="elements:Vertex.IsGround" Value="True">
							<Setter Property="Fill" Value="{StaticResource HatchGroundBrush}"/>
						</Trigger>
						<Trigger Property="elements:Vertex.IsBasic" Value="True">
							<Setter Property="Fill" Value="{StaticResource GridBasicBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type elements:Edge}">
		<Setter Property="UseLayoutRounding" Value="False"/>
		<Setter Property="Panel.ZIndex" Value="2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type elements:Edge}">

					<Grid>

						<Grid.Resources>
							<Style TargetType="CheckBox">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="CheckBox">
											<Grid>
												<Line X1="0" X2="3.75"
                                                      Y1="1.5" Y2="1.5"
                                                      x:Name="innerLine"
                                                      Stroke="{TemplateBinding BorderBrush}"
                                                      StrokeThickness="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=StrokeThickness}"/>

												<Grid Margin="3.75,0,0,0">
													<Rectangle Width="3" Height="3" 
                                                               Stroke="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=Stroke}" Fill="{x:Static Brushes.White}"
                                                               StrokeThickness="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=StrokeThickness}"/>
													<Line x:Name="line"
                                                          X1="0.75" X2="2.25"
                                                          Y1="1.5" Y2="1.5"
                                                          RenderTransformOrigin="0.5,0.5"
                                                          Stroke="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=Stroke}"
                                                          StrokeThickness="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=StrokeThickness}"/>

												</Grid>
											</Grid>
											<ControlTemplate.Triggers>
												<Trigger Property="IsChecked" Value="False">
													<Setter Property="RenderTransform" TargetName="line">
														<Setter.Value>
															<RotateTransform Angle="90"/>
														</Setter.Value>
													</Setter>
													<Setter TargetName="line" Property="Stroke" Value="{x:Static Brushes.Gray}"/>
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>

							<helpers:EdgeMaskMultiConverter x:Key="EdgeMaskMultiConverter"/>

						</Grid.Resources>

						<Polyline x:Name="ClickPolyline"
						          Stroke="{x:Static Brushes.Transparent}"
						          StrokeThickness="2"
						          Points="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=PointCollection}"/>

						<Polyline x:Name="innerPolyline"
								  Visibility="Collapsed"
                                  Stroke="{x:Static Brushes.Black}"
                                  StrokeThickness="1.25"
                                  Points="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=PointCollection}"/>

						<Polyline x:Name="innerPolylineStart"
						          Visibility="Collapsed"
						          Stroke="{x:Static Brushes.Black}"
						          StrokeThickness="1.25"
						          Points="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=PointCollectionStart}"/>

						<Polyline x:Name="innerPolylineEnd"
						          Visibility="Collapsed"
						          Stroke="{x:Static Brushes.Black}"
						          StrokeThickness="1.25"
						          Points="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=PointCollectionEnd}"/>
						
						<Polyline x:Name="Polyline"
						          Stroke="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=Stroke}"
						          Points="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=PointCollection}"
						          StrokeThickness="{TemplateBinding StrokeThickness}"/>

						<Polyline x:Name="PolylineStart"
								  Visibility="Hidden"
						          Stroke="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=Stroke}"
						          Points="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=PointCollectionStart}"
						          StrokeThickness="{TemplateBinding StrokeThickness}"/>

						<Polyline x:Name="PolylineEnd"
						          Visibility="Hidden"
						          Stroke="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=Stroke}"
						          Points="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=PointCollectionEnd}"
						          StrokeThickness="{TemplateBinding StrokeThickness}"/>


						<Canvas>
							<CheckBox x:Name="Q1"
                                      IsChecked="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=On1}"
                                      BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=OldV1.Stroke}">
								<CheckBox.RenderTransform>
									<TranslateTransform x:Name="Q1Transform"/>
								</CheckBox.RenderTransform>
							</CheckBox>
							<CheckBox x:Name="Q2"
                                      IsChecked="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=On2}"
                                      BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=OldV2.Stroke}">
								<CheckBox.RenderTransform>
									<TranslateTransform x:Name="Q2Transform"/>
								</CheckBox.RenderTransform>
							</CheckBox>

							<Path x:Name="InnerTransformer" Visibility="Hidden"
							      Stroke="{x:Static Brushes.Black}"
								  Margin="-0.375,-0.375"
							      StrokeThickness="0.75"
							      Fill="{x:Static Brushes.Transparent}">

								<Path.Data>
									<GeometryGroup FillRule="Nonzero">
										<EllipseGeometry Center="5,5" RadiusX="5.25" RadiusY="5.25"/>
										<EllipseGeometry Center="11.25,5" RadiusX="5.25" RadiusY="5.25"/>
									</GeometryGroup>
								</Path.Data>
							</Path>

							<Path x:Name="Transformer" Visibility="Hidden"
                                  Stroke="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=Stroke}"
                                  StrokeThickness="{TemplateBinding StrokeThickness}"
                                  Fill="{x:Static Brushes.Transparent}">

								<Path.Data>
									<GeometryGroup FillRule="Nonzero">
										<EllipseGeometry Center="5,5" RadiusX="5" RadiusY="5"/>
										<EllipseGeometry Center="11.25,5" RadiusX="5" RadiusY="5"/>
									</GeometryGroup>
								</Path.Data>
							</Path>

							<Ellipse x:Name="DotV1"
                                     StrokeThickness="{TemplateBinding StrokeThickness}"
                                     Stroke="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=OldV1.Stroke}"
                                     Fill="{x:Static Brushes.White}"
                                     Width="3" Height="3">
								<Ellipse.RenderTransform>
									<TranslateTransform x:Name="DotV1Transform"/>
								</Ellipse.RenderTransform>
							</Ellipse>

							<Ellipse x:Name="DotV2"
                                     StrokeThickness="{TemplateBinding StrokeThickness}"
                                     Stroke="{Binding RelativeSource={RelativeSource AncestorType=elements:Edge}, Path=OldV2.Stroke}"
                                     Fill="{x:Static Brushes.White}"
                                     Width="3" Height="3">
								<Ellipse.RenderTransform>
									<TranslateTransform x:Name="DotV2Transform"/>
								</Ellipse.RenderTransform>
							</Ellipse>
						</Canvas>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="elements:Edge.IsPreview" Value="True">
							<Setter TargetName="Polyline" Property="StrokeDashArray" Value="5 2"/>
							<Setter TargetName="Q1" Property="Visibility" Value="Hidden"/>
							<Setter TargetName="Q2" Property="Visibility" Value="Hidden"/>
							<Setter TargetName="DotV1" Property="Visibility" Value="Hidden"/>
							<Setter TargetName="DotV2" Property="Visibility" Value="Hidden"/>
							<Setter Property="Panel.ZIndex" Value="-1"/>
						</Trigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsTrasnformer" Value="False"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="innerPolyline" Property="Visibility" Value="Visible"/>
						</MultiTrigger>


						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsTrasnformer" Value="True"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="innerPolylineStart" Property="Visibility" Value="Visible"/>
							<Setter TargetName="innerPolylineEnd" Property="Visibility" Value="Visible"/>
							<Setter TargetName="InnerTransformer" Property="Visibility" Value="Visible"/>
						</MultiTrigger>

						<Trigger Property="elements:Edge.IsConnected" Value="True">
							<Setter Property="Stroke" Value="{x:Static Brushes.Blue}"/>
						</Trigger>
						<Trigger Property="elements:Edge.IsTrasnformer" Value="True">
							<Setter TargetName="Transformer" Property="Visibility" Value="Visible"/>
							<Setter TargetName="PolylineStart" Property="Visibility" Value="Visible"/>
							<Setter TargetName="PolylineEnd" Property="Visibility" Value="Visible"/>
							<Setter TargetName="Polyline" Property="Visibility" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
