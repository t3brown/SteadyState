name: Build & Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Укажите версию'
        required: true
      prerelease:
        description: 'Пометить как prerelease?'
        required: false
        default: 'false'

jobs:
  build-release:
    runs-on: windows-latest
    permissions:
      contents: write
    defaults:
      run:
        working-directory: SteadyState.MainProject.WPF

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Compute versions
        id: ver
        shell: bash
        run: |
          TAG="${{ github.event.inputs.version }}"
          ASM="${TAG}.0"
          YEAR="$(date +%Y)"
          DIR="${{ runner.temp }}\publish\"
          {
            echo "semver=$TAG"
            echo "asmver=$ASM"
            echo "year=$YEAR"
            echo "publishDir=$DIR"
          } >> "$GITHUB_OUTPUT"

      - name: Publish via FolderProfile with version injection
        run: >
          dotnet publish SteadyState.MainProject.WPF.csproj
          -c Release
          /p:PublishProfile=FolderProfile
          /p:PublishDir=${{ steps.ver.outputs.publishDir }}
          /p:Version=${{ steps.ver.outputs.semver }}
          /p:AssemblyVersion=${{ steps.ver.outputs.asmver }}
          /p:FileVersion=${{ steps.ver.outputs.asmver }}
          /p:InformationalVersion=${{ steps.ver.outputs.semver }}
          /p:Copyright="Copyright © khramtsov.k ${{ steps.ver.outputs.year }}"

      - name: Locate EXE path
        id: out
        shell: pwsh
        run: |
          $outDir = ${{ steps.ver.outputs.publishDir }}
          if (-not (Test-Path $outDir)) { throw "Publish dir not found: $outDir" }
          $exe = Get-ChildItem $outDir -Filter *.exe | Select-Object -First 1
          if (-not $exe) { throw "No .exe found in $outDir" }
          "exe=$($exe.FullName)" >> $env:GITHUB_OUTPUT
          Write-Host "EXE: $($exe.FullName)"

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.ver.outputs.semver }}
          name: v${{ steps.ver.outputs.semver }}
          prerelease: ${{ github.event.inputs.prerelease }}
          commit: ${{ github.sha }}
          generateReleaseNotes: true
          makeLatest: ${{ github.event.inputs.prerelease == 'false' }}
          artifacts: |
            ${{ steps.out.outputs.exe }}
