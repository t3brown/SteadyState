name: Build & Upload Windows EXE

on:
  release:
    types: [published]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: SteadyState.MainProject.WPF   # ← корень проекта

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Compute version
        id: ver
        shell: bash
        run: |
          # Если запуск по тегу (release), возьмём его
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
            echo "version=${TAG#v}" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Иначе — попробуем взять последний тег в репо
          git fetch --tags
          LAST="$(git describe --tags --abbrev=0 2>/dev/null || true)"
          if [[ -n "$LAST" ]]; then
            echo "version=${LAST#v}" >> $GITHUB_OUTPUT
          else
            echo "version=0.0.0" >> $GITHUB_OUTPUT
          fi

      - name: Publish (FolderProfile)
        run: >
          dotnet publish SteadyState.MainProject.WPF.csproj
          -c Release
          /p:PublishProfile=FolderProfile
          /p:Version=${{ steps.ver.outputs.version }}
          /p:AssemblyName="Steady-State ES"

      - name: Locate EXE
        id: out
        shell: pwsh
        run: |
          $outDir = "bin/Release/net6.0-windows/publish/win-x64"
          if (-not (Test-Path $outDir)) { throw "Output directory not found: $outDir" }

          $desired = Join-Path $outDir "Steady-State ES.exe"
          if (-not (Test-Path $desired)) {
            $exe = Get-ChildItem $outDir -Filter *.exe | Select-Object -First 1
            if (-not $exe) { throw "No .exe found in $outDir" }
            Move-Item $exe.FullName $desired -Force
          }

          echo "exe=$desired" >> $env:GITHUB_OUTPUT
          Write-Host "EXE: $desired"

      - name: Upload EXE to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.out.outputs.exe }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact (manual runs)
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: Steady-State-ES.exe
          path: ${{ steps.out.outputs.exe }}
