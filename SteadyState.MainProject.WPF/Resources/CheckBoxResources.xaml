<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#EDEDED"/>
    <SolidColorBrush x:Key="OptionMark.Static.Transparent" Color="Transparent"/>
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#858585"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#E5E5E5"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#DCDCDC"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#B6B6B6"/>
    <SolidColorBrush x:Key="OptionMark.Checked" Color="#0067C0"/>
    <SolidColorBrush x:Key="OptionMark.Checked.Foreground" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OptionMark.Checked.MouseOver" Color="#1975C5"/>
    <SolidColorBrush x:Key="OptionMark.Checked.Pressed.Background" Color="#3183CA"/>

    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>

    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="{StaticResource OptionMark.Static.Transparent}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <!--<Border x:Name="checkBoxBorder" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">-->
                        <Grid x:Name="markGrid" Width="16" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <TextBlock x:Name="checkBackground" TextAlignment="Center" VerticalAlignment="Center" Opacity="1" Width="16" Foreground="{StaticResource OptionMark.Static.Background}"
                                               FontFamily="{StaticResource SegoeFluentIcons}"
                                               FontSize="16" 
                                               Text="&#xe73b;"
                                       UseLayoutRounding="{TemplateBinding UseLayoutRounding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <TextBlock x:Name="checkBorder" TextAlignment="Center" VerticalAlignment="Center" Opacity="1" Width="16" Foreground="{StaticResource OptionMark.Static.Border}"
                                               FontFamily="{StaticResource SegoeFluentIcons}"
                                               FontSize="14" 
                                               Text="&#xe739;"
                                       UseLayoutRounding="{TemplateBinding UseLayoutRounding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                <TextBlock x:Name="сheckMark" TextAlignment="Center" VerticalAlignment="Center" Opacity="0" Width="16" Foreground="{StaticResource OptionMark.Checked.Foreground}"
                                               FontFamily="{StaticResource SegoeFluentIcons}"
                                               FontSize="12" 
                                               Text="&#xe73e;"
                                           UseLayoutRounding="{TemplateBinding UseLayoutRounding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <TextBlock x:Name="indeterminateMark" TextAlignment="Center" VerticalAlignment="Center" Opacity="0" Width="16" Foreground="{StaticResource OptionMark.Checked.Foreground}"
                                               FontFamily="{StaticResource SegoeFluentIcons}"
                                               FontSize="12" 
                                               Text="&#xe73c;"
                                           UseLayoutRounding="{TemplateBinding UseLayoutRounding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        <!--</Border>-->
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>-->

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" TargetName="checkBackground" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false"/>
                                <Condition Property="IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" TargetName="checkBackground" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            <Setter Property="Foreground" TargetName="checkBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                        </MultiTrigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" TargetName="checkBackground" Value="{StaticResource OptionMark.Checked}"/>
                            <Setter Property="Foreground" TargetName="checkBorder" Value="{StaticResource OptionMark.Checked}"/>
                            <!--<Setter Property="Opacity" TargetName="checkBorder" Value="0"/>-->
                            <!--<Setter Property="BorderThickness" TargetName="checkBoxBorder" Value="0"/>-->
                            <!--<Setter Property="Margin" TargetName="markGrid" Value="2"/>-->
                            <Setter Property="Opacity" TargetName="сheckMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Foreground" TargetName="checkBackground" Value="{StaticResource OptionMark.Checked}"/>
                            <Setter Property="Foreground" TargetName="checkBorder" Value="{StaticResource OptionMark.Checked}"/>
                            <!--<Setter Property="BorderThickness" TargetName="checkBoxBorder" Value="0"/>-->
                            <!--<Setter Property="Margin" TargetName="markGrid" Value="2"/>-->
                            <Setter Property="Opacity" TargetName="сheckMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" TargetName="checkBackground" Value="{StaticResource OptionMark.Checked.MouseOver}"/>
                            <Setter Property="Foreground" TargetName="checkBorder" Value="{StaticResource OptionMark.Checked.MouseOver}"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true"/>
                                <Condition Property="IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" TargetName="checkBackground" Value="{StaticResource OptionMark.Checked.Pressed.Background}"/>
                        </MultiTrigger>


                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" TargetName="checkBackground" Value="{StaticResource OptionMark.Disabled.Background}"/>
                            <Setter Property="Foreground" TargetName="checkBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                            <Setter Property="Foreground" TargetName="сheckMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            <Setter Property="Foreground" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>