<hc:Window x:Class="SteadyState.MainProject.WPF.Views.VertexSelectionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:converters="clr-namespace:SteadyState.MainProject.WPF.Converters"
		xmlns:hc="https://handyorg.github.io/handycontrol"
		xmlns:views="clr-namespace:SteadyState.MainProject.WPF.Views"
		xmlns:infrastructure="clr-namespace:SteadyState.MainProject.WPF.Infrastructure"
		xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
		mc:Ignorable="d"
        Background="{DynamicResource RegionBrush}"
        Title="Выбор узла"
        Height="400" SizeToContent="Width">

	<Window.Resources>

		<infrastructure:BindingProxy x:Key="VertexIndexCheckedProxy" Data="{Binding EnableColumns.VertexIndex}"/>
		<infrastructure:BindingProxy x:Key="VertexTitleCheckedProxy" Data="{Binding EnableColumns.VertexTitle}"/>
		<infrastructure:BindingProxy x:Key="IsBasicCheckedProxy" Data="{Binding EnableColumns.IsBasic}"/>
		<infrastructure:BindingProxy x:Key="VoltNomCheckedProxy" Data="{Binding EnableColumns.VoltNom}"/>
		<infrastructure:BindingProxy x:Key="ShnCheckedProxy" Data="{Binding EnableColumns.Shn}"/>
		<infrastructure:BindingProxy x:Key="PowerReCheckedProxy" Data="{Binding EnableColumns.PowerRe}"/>
		<infrastructure:BindingProxy x:Key="PowerImCheckedProxy" Data="{Binding EnableColumns.PowerIm}"/>
		<infrastructure:BindingProxy x:Key="VoltSusCheckedProxy" Data="{Binding EnableColumns.VoltSus}"/>
		<infrastructure:BindingProxy x:Key="MinQCheckedProxy" Data="{Binding EnableColumns.MinQ}"/>
		<infrastructure:BindingProxy x:Key="MaxQCheckedProxy" Data="{Binding EnableColumns.MaxQ}"/>
		<infrastructure:BindingProxy x:Key="VoltReCheckedProxy" Data="{Binding EnableColumns.VoltRe}"/>
		<infrastructure:BindingProxy x:Key="VoltImCheckedProxy" Data="{Binding EnableColumns.VoltIm}"/>
		<infrastructure:BindingProxy x:Key="VoltMagnCheckedProxy" Data="{Binding EnableColumns.VoltMagn}"/>
		<infrastructure:BindingProxy x:Key="VoltAngleCheckedProxy" Data="{Binding EnableColumns.VoltAngle}"/>

		<converters:DoubleConverter Units="{Binding Units}"
		                            DisplayPrecision="{Binding DisplayPrecision}"
		                            IsRelative="{Binding IsRelative}"
		                            x:Key="DoubleConverter"/>

		<converters:UnitsConverter x:Key="UnitsConverter"/>
	</Window.Resources>

	<Grid>
		<Grid.Resources>


			<CollectionViewSource x:Key="VerticesSource" Source="{Binding Vertices}">
				<CollectionViewSource.GroupDescriptions>
					<PropertyGroupDescription PropertyName="IsCreatedByDataGrid"/>
				</CollectionViewSource.GroupDescriptions>

				<CollectionViewSource.SortDescriptions>
					<scm:SortDescription PropertyName="IsCreatedByDataGrid" Direction="Ascending"/>
				</CollectionViewSource.SortDescriptions>
			</CollectionViewSource>


		</Grid.Resources>
		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<DataGrid x:Name="DataGrid"
		          ItemsSource="{Binding Source={StaticResource VerticesSource}}"
		          CanUserAddRows="True"
		          Style="{StaticResource DataGrid.Small}"
		          AutoGenerateColumns="False"
				  SelectionMode="Single"
		          hc:DataGridAttach.CanUnselectAllWithBlankArea="True"
		          HeadersVisibility="Column"
		          PreviewKeyDown="DataGrid_OnPreviewKeyDown">

			<hc:Interaction.Triggers>
				<hc:EventTrigger EventName="AddingNewItem">
					<hc:EventToCommand Command="{Binding DataContext.AddingNewVertexDataGridCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}} }"
					                   PassEventArgsToCommand="True"/>
				</hc:EventTrigger>
			</hc:Interaction.Triggers>

			<DataGrid.GroupStyle>
				<GroupStyle>
					<GroupStyle.ContainerStyle>
						<Style TargetType="{x:Type GroupItem}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type GroupItem}">
										<StackPanel Orientation="Vertical">
											<TextBlock x:Name="Header"
										           Margin="5"
										           Text="Узлы, не нанесенные на схему:"
										           Visibility="{Binding Name, Converter={StaticResource BoolToVisibilityConverter}}"/>
											<ItemsPresenter/>
										</StackPanel>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</GroupStyle.ContainerStyle>
				</GroupStyle>
			</DataGrid.GroupStyle>

			<DataGrid.Columns>

				<DataGridTextColumn Header="Номер"
						                    Visibility="{Binding Data,Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource VertexIndexCheckedProxy}}" 
						                    Width="60"
						                    Binding="{Binding Path=Index,UpdateSourceTrigger=LostFocus, Mode=OneWay}"
						                    IsReadOnly="True"/>

				<DataGridTextColumn Visibility="{Binding Data, Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource VertexTitleCheckedProxy}}"
						                    Header="Название"
						                    Width="100"
						                    Binding="{Binding Path=Title,UpdateSourceTrigger=LostFocus}"/>

				<DataGridTemplateColumn Visibility="{Binding Data, Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource IsBasicCheckedProxy}}"
						                        Header="Базис"
						                        Width="50"
						                        SortMemberPath="IsBasic"
						                        CanUserSort="True">

					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<RadioButton GroupName="BasicGroup" 
									             IsChecked="{Binding Path= IsBasic, UpdateSourceTrigger=PropertyChanged}" 
									             HorizontalAlignment="Left"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTextColumn Visibility="{Binding Data, Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource VoltNomCheckedProxy}}"
						                    Width="100" Binding="{Binding Path= VoltNom,UpdateSourceTrigger=LostFocus, Converter={StaticResource DoubleConverter}, ConverterParameter=VoltNom}">
					<DataGridTextColumn.HeaderTemplate>
						<DataTemplate>
							<TextBlock Text= "{Binding DataContext.Units.VoltNom, StringFormat= 'Uном, {0}', RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource UnitsConverter}}"/>
						</DataTemplate>
					</DataGridTextColumn.HeaderTemplate>
				</DataGridTextColumn>

				<DataGridTemplateColumn Visibility="{Binding Data, Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource ShnCheckedProxy}}"
                                Header="СХН" Width="100" SortMemberPath="Shn" CanUserSort="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=Shn.VisualTitle, Mode=OneWay}"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<TextBox Text="{Binding Path=Shn.VisualTitle, Mode=OneWay}"
									         Style="{StaticResource TextBox.Small}"
									         IsReadOnly="True">
								<hc:Interaction.Triggers>
									<hc:EventTrigger EventName="MouseDoubleClick">
										<hc:EventToCommand Command="{Binding DataContext.OpenShnSelectionWindowCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}} }"
												                   CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
									</hc:EventTrigger>
								</hc:Interaction.Triggers>
							</TextBox>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				<DataGridTextColumn Visibility="{Binding Data, Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource PowerReCheckedProxy}}"
                                                Width="100" Binding="{Binding Path= PowerRe,UpdateSourceTrigger=LostFocus, Converter={StaticResource DoubleConverter},ConverterParameter=PowerRe}">
					<DataGridTextColumn.HeaderTemplate>
						<DataTemplate>
							<TextBlock Text= "{Binding DataContext.Units.PowerRe, StringFormat= 'Pнагр, {0}', RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource UnitsConverter}}"/>
						</DataTemplate>
					</DataGridTextColumn.HeaderTemplate>
				</DataGridTextColumn>

				<DataGridTextColumn Visibility="{Binding Data, Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource PowerImCheckedProxy}}"
                                                Width="100" Binding="{Binding Path= PowerIm,UpdateSourceTrigger=LostFocus, Converter={StaticResource DoubleConverter},ConverterParameter=PowerIm}">
					<DataGridTextColumn.HeaderTemplate>
						<DataTemplate>
							<TextBlock Text= "{Binding DataContext.Units.PowerIm, StringFormat= 'Qнагр, {0}', RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource UnitsConverter}}"/>
						</DataTemplate>
					</DataGridTextColumn.HeaderTemplate>
				</DataGridTextColumn>

				<DataGridTextColumn Visibility="{Binding Data, Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource VoltSusCheckedProxy}}"
                                                Width="100" Binding="{Binding Path= VoltSus,UpdateSourceTrigger=LostFocus, Converter={StaticResource DoubleConverter}, ConverterParameter=VoltSus}">
					<DataGridTextColumn.HeaderTemplate>
						<DataTemplate>
							<TextBlock Text= "{Binding DataContext.Units.VoltSus, StringFormat= 'Uпод, {0}', RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource UnitsConverter}}"/>
						</DataTemplate>
					</DataGridTextColumn.HeaderTemplate>
				</DataGridTextColumn>

				<DataGridTextColumn Visibility="{Binding Data, Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource MinQCheckedProxy}}"
                                                Width="100" Binding="{Binding Path= MinQ,UpdateSourceTrigger=LostFocus, Converter={StaticResource DoubleConverter}, ConverterParameter=MinQ}">
					<DataGridTextColumn.HeaderTemplate>
						<DataTemplate>
							<TextBlock Text= "{Binding DataContext.Units.MinQ, StringFormat= 'Qмин, {0}', RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource UnitsConverter}}"/>
						</DataTemplate>
					</DataGridTextColumn.HeaderTemplate>
				</DataGridTextColumn>

				<DataGridTextColumn Visibility="{Binding Data, Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource MaxQCheckedProxy}}"
                                                Width="100" Binding="{Binding Path= MaxQ,UpdateSourceTrigger=LostFocus, Converter={StaticResource DoubleConverter}, ConverterParameter=MaxQ}">
					<DataGridTextColumn.HeaderTemplate>
						<DataTemplate>
							<TextBlock Text= "{Binding DataContext.Units.MaxQ, StringFormat= 'Qмакс, {0}', RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource UnitsConverter}}"/>
						</DataTemplate>
					</DataGridTextColumn.HeaderTemplate>
				</DataGridTextColumn>
				<DataGridTextColumn Visibility="{Binding Data, Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource VoltReCheckedProxy}}"
                                                Width="100" IsReadOnly="True"
                                                Binding="{Binding Path= VoltRe,UpdateSourceTrigger=LostFocus, Converter={StaticResource DoubleConverter}, ConverterParameter=VoltRe}">
					<DataGridTextColumn.HeaderTemplate>
						<DataTemplate>
							<TextBlock Text= "{Binding DataContext.Units.VoltRe, StringFormat= 'Uʹ, {0}', RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource UnitsConverter}}"/>
						</DataTemplate>
					</DataGridTextColumn.HeaderTemplate>
				</DataGridTextColumn>
				<DataGridTextColumn Visibility="{Binding Data, Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource VoltImCheckedProxy}}"
                                                Width="100" IsReadOnly="True"
                                                Binding="{Binding Path= VoltIm,UpdateSourceTrigger=LostFocus, Converter={StaticResource DoubleConverter}, ConverterParameter=VoltIm}">
					<DataGridTextColumn.HeaderTemplate>
						<DataTemplate>
							<TextBlock Text= "{Binding DataContext.Units.VoltIm, StringFormat= 'Uʹʹ, {0}', RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource UnitsConverter}}"/>
						</DataTemplate>
					</DataGridTextColumn.HeaderTemplate>
				</DataGridTextColumn>
				<DataGridTextColumn Visibility="{Binding Data, Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource VoltMagnCheckedProxy}}"
                                                Width="100" IsReadOnly="True"
                                                Binding="{Binding Path= VoltMagn,UpdateSourceTrigger=LostFocus, Converter={StaticResource DoubleConverter}, ConverterParameter=VoltMagn}">
					<DataGridTextColumn.HeaderTemplate>
						<DataTemplate>
							<TextBlock Text= "{Binding DataContext.Units.VoltMagn, StringFormat= 'U, {0}', RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource UnitsConverter}}"/>
						</DataTemplate>
					</DataGridTextColumn.HeaderTemplate>
				</DataGridTextColumn>
				<DataGridTextColumn Visibility="{Binding Data, Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource VoltAngleCheckedProxy}}"
                                                Width="100" IsReadOnly="True"
                                                Binding="{Binding Path= VoltAngle,UpdateSourceTrigger=LostFocus, Converter={StaticResource DoubleConverter}, ConverterParameter=VoltAngle}">
					<DataGridTextColumn.HeaderTemplate>
						<DataTemplate>
							<TextBlock Text= "{Binding DataContext.Units.VoltAngle, StringFormat= 'δ, {0}', RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource UnitsConverter}}"/>
						</DataTemplate>
					</DataGridTextColumn.HeaderTemplate>
				</DataGridTextColumn>
			</DataGrid.Columns>
		</DataGrid>

		<StackPanel Grid.Row="1"
		            Orientation="Horizontal"
		            HorizontalAlignment="Center">

			<Button Style="{StaticResource ButtonPrimary}"
			        Margin="5"
			        Content="Подтвердить"
			        Command="{Binding AcceptSelectionCommand, RelativeSource={RelativeSource AncestorType=views:VertexSelectionWindow}}"
			        CommandParameter="{Binding SelectedItem, ElementName=DataGrid}"/>

			<Button Style="{StaticResource ButtonDanger}"
			        Margin="5"
			        Content="Сбросить"
			        Command="{Binding ResetSelectionCommand, RelativeSource={RelativeSource AncestorType=views:VertexSelectionWindow}}"/>


		</StackPanel>
	</Grid>
</hc:Window>
