<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SteadyState.MainProject.WPF"
    xmlns:c="clr-namespace:SteadyState.MainProject.WPF.Components"
    xmlns:helpers="clr-namespace:SteadyState.MainProject.WPF.Components.Helpers"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:hc="https://handyorg.github.io/handycontrol">

    <ResourceDictionary.MergedDictionaries>
        <hc:ThemeResources />
        <hc:Theme/>
    </ResourceDictionary.MergedDictionaries>


    <Style TargetType="{x:Type c:PropertyEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:PropertyEditor}">
                    
                    <Border CornerRadius="5" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=c:PropertyEditor}}">

                        <Grid Margin="0,0,0,0">

                            <Grid.Resources>

                                <DataTemplate x:Key="BoolTemplate" DataType="{x:Type sys:Boolean}">
                                    <ToggleButton IsChecked="{Binding Path =Value, RelativeSource={RelativeSource AncestorType=c:PropertyEditor}}" Margin="0"
								              Style="{StaticResource ToggleButtonSwitch.Small}"
								              HorizontalAlignment="Center"/>
                                </DataTemplate>

                                <DataTemplate x:Key="TextTemplate">
                                    <TextBox Text="{Binding Path =Value, RelativeSource={RelativeSource AncestorType=c:PropertyEditor}}"
								         Style="{StaticResource TextBox.Small}"
								         IsReadOnly="{Binding Path =IsReadOnly, RelativeSource={RelativeSource AncestorType=c:PropertyEditor}}">
                                        <hc:Interaction.Triggers>
                                            <hc:RoutedEventTrigger RoutedEvent="MouseDoubleClick">
                                                <hc:EventToCommand  Command="{Binding Path =MouseDoubleClickCommand, RelativeSource={RelativeSource AncestorType=c:PropertyEditor}}"
																CommandParameter="{Binding Path =MouseDoubleClickCommandParameter, RelativeSource={RelativeSource AncestorType=c:PropertyEditor}}"/>
                                            </hc:RoutedEventTrigger>
                                        </hc:Interaction.Triggers>
                                    </TextBox>
                                </DataTemplate>

                                <DataTemplate x:Key="EnumTemplate" DataType="{x:Type sys:Enum}">
                                    <ComboBox SelectedValue="{Binding Path =Value, RelativeSource={RelativeSource AncestorType=c:PropertyEditor}}"
								          ItemsSource="{Binding Path =ItemsSource, RelativeSource={RelativeSource AncestorType=c:PropertyEditor}}"
								          Style="{StaticResource ComboBox.Small}"
								          SelectedValuePath="Value"
								          DisplayMemberPath="Description"/>
                                </DataTemplate>

                                <helpers:PropertyValueDataTemplateSelector x:Key="TemplateSelector"
							                                           BoolTemplate="{StaticResource BoolTemplate}"
							                                           TextTemplate="{StaticResource TextTemplate}"
							                                           EnumTemplate="{StaticResource EnumTemplate}"/>
                            </Grid.Resources>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Margin="10 0 0 0"
						           HorizontalAlignment="Left"
						           Text="{Binding Path =Title, RelativeSource={RelativeSource AncestorType=c:PropertyEditor}}"
						           Style="{StaticResource TextBlockDefault}"/>


                            <ContentControl Grid.Column="1"
										Margin="2"
										Content="{Binding Path=Value, RelativeSource={RelativeSource AncestorType=c:PropertyEditor}}"
										ContentTemplateSelector="{StaticResource TemplateSelector}"/>

                        </Grid>
                        
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type c:LoadingPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:LoadingPanel}">
                    <!--<Border VerticalAlignment="Center"
					        Background="{DynamicResource PrimaryBrush}"
					        CornerRadius="10">-->
                    <hc:LoadingCircle />
                    <!--</Border>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
